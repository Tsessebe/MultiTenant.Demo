// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace MultiTenant.Demo.TenantCore.Context
{
    #pragma warning disable 1591
    public partial class TenantContext : DbContext
    {
        public virtual DbSet<Summary> Summaries { get; set; }
        public virtual DbSet<Weather> Weathers { get; set; }

        public TenantContext(DbContextOptions<TenantContext> options) : base(options)
        {
        }


        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Summary>(entity =>
            {
                entity.ToTable("Summary");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(1024)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Weather>(entity =>
            {
                entity.ToTable("Weather");

                entity.Property(e => e.Id).ValueGeneratedNever();

                entity.Property(e => e.Tenant)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.HasOne(d => d.Summary)
                    .WithMany(p => p.Weathers)
                    .HasForeignKey(d => d.SummaryId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_UserTenant_User_UserId");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
